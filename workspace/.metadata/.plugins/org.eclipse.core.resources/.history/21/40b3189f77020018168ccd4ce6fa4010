package test;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.util.List;

public class SimpleChatSerialization implements Runnable {

	Socket client;

	public SimpleChatSerialization(Socket client) {
		this.client = client;
	}

	@Override
	public void run() {
		InetAddress currentClientInetAddress = client.getInetAddress();
		System.out.println("Connection established with: " + currentClientInetAddress);

		InputStream is;
		ObjectInputStream ois;
		OutputStream os;
		ObjectOutputStream oos;
		Message m = null;
		try {

			// leggo Message da Client
			is = client.getInputStream();
			ois = new ObjectInputStream(is);
			m = (Message) ois.readObject();
			// serializzo il messaggio in locale

			// leggo Message da Client
			os = client.getOutputStream();
			oos = new ObjectOutputStream(os);
			oos.writeObject(messages);
			
			System.out.println(m.getUsername() + " " + m.getTextMessage());
			System.out.println("Closing connection with client");
			oos.close();
			os.close();
			ois.close();
			is.close();
			client.close();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

	}
	
	private void serializeWriteMessage(Message mex) throws IOException {
		FileOutputStream fos = null;
		fos = new FileOutputStream("C:\\Users\\UTENTE9\\Desktop\\corso_java\\corso_java\\messaggioSerializzato.ser");
		ObjectOutputStream oos;
		oos = new ObjectOutputStream(fos);
		oos.writeObject(mex);
		oos.close();
		fos.close();
	}
	
	private Message deserializeReadMessage() throws IOException, ClassNotFoundException {
		Message mex = null;
		FileInputStream fis = null;
		fis = new FileInputStream("C:\\Users\\UTENTE9\\Desktop\\corso_java\\corso_java\\messaggioSerializzato.ser");
		ObjectInputStream ois;
		ois = new ObjectInputStream(fis);
		mex = (Message) ois.readObject();
		ois.close();
		fis.close();
		
		return mex;
	}

}