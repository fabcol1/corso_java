package esempi;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import javax.swing.plaf.FileChooserUI;

public class esempioIO {
	public static void main(String[] args) {
		try {
//			readLocalFile();
			writeLocalFile();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private static void readLocalFile() throws IOException {
		BufferedReader in = new BufferedReader(
			new FileReader("C:\\Users\\UTENTE9\\Desktop\\workspace\\prova.txt")
		);
		String s, s2 = new String();
		while((s = in.readLine()) != null) {
			s2 += s + "\n";
		}
		in.close();
		System.out.println(s2);
	}
	private static void writeLocalFile() throws IOException {
		String fileToWrite = "C:\\Users\\UTENTE9\\Desktop\\workspace\\dacopiare.txt";
		File f = new File(fileToWrite);
		// creo lo stream di output per file
		FileOutputStream fos = new FileOutputStream(f);
		// creo un printwriter per scrivere il file
		PrintWriter pw = new PrintWriter(fos);
		// scrivo sul file la riga ciao
		pw.println("ciao");
		pw.println("weeeeee");
		pw.close();
		fos.close();
	}
	
	private static void copyPasteFile() {
		String fileToCopy= "C:\\Users\\UTENTE9\\Desktop\\workspace\\dacopiare.txt";
		File f = new File(fileToCopy);
		
		if(f.exists()) {
			String mkdir = "C:\\Users\\UTENTE9\\Desktop\\workspace\\backupDir";
			File dir = new File(mkdir);
			
			int i = 0;
			
			while(dir.exists() && !dir.isDirectory()) {
				mkdir += i;
				dir = new File(mkdir);
			}
			//se arriva qua o NON ESISTE oppure SE ESISTE è UNA DIRECTORY
			if(!dir.exists()) {
				dir.mkdir();
			}
			
			FileOutputStream fos = new FileOutputStream(f);
			FileWriter fw = new FileWriter(fos);
			fos.write(f);
			
		}
		
	}
	
	public static void copyFileToFile(final File src, final File dest) throws IOException
	{
	    copyInputStreamToFile(new FileInputStream(src), dest);
	    dest.setLastModified(src.lastModified());
	}

	public static void copyInputStreamToFile(final InputStream in, final File dest)
	        throws IOException
	{
	    copyInputStreamToOutputStream(in, new FileOutputStream(dest));
	}


	public static void copyInputStreamToOutputStream(final InputStream in,
	        final OutputStream out) throws IOException
	{
	    try
	    {
	        try
	        {
	            final byte[] buffer = new byte[1024];
	            int n;
	            while ((n = in.read(buffer)) != -1)
	                out.write(buffer, 0, n);
	        }
	        finally
	        {
	            out.close();
	        }
	    }
	    finally
	    {
	        in.close();
	    }
	}
}


