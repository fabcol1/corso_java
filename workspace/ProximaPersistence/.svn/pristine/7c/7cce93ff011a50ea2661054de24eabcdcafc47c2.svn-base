app.controller('bitcoinController', function($scope, $http, $location, $route, $log, $q) {
	
	$http({
		method : 'GET',
		url : '/api/provider/'
	}).then(function(response) {
		$scope.providers = response.data;	
	
		chartGenerator($http, $scope, $q, '/api/bitcoin/lastDay/', 'BTC/USD ( Bitcoin )', 'minute', 'daily');
		chartGenerator($http, $scope, $q, '/api/bitcoin/lastWeek/', 'BTC/USD ( Bitcoin )', 'day', 'weekly');
		chartGenerator($http, $scope, $q, '/api/bitcoin/lastMonth/', 'BTC/USD ( Bitcoin )', 'day', 'monthly');
		chartGenerator($http, $scope, $q, '/api/bitcoin/lastYear/', 'BTC/USD ( Bitcoin )', 'month', 'yearly');
	});
});

function chartGenerator($http, $scope, $q, urlBase, chartTitle, unit, elementId) {
	var actions = [];
	for(var i = 0; i < $scope.providers.length; i++) {
		actions.push($http.get(urlBase+$scope.providers[i].id));
	}
	
	// HANDLE MULTIPE HTTP REQUEST WITH ANGULARJS
	$q.all(actions).then(function(arrayOfResults) {

		$scope.chart = {};
		$scope.buf = {};
		for(var i = 0; i < arrayOfResults.length; i++) {
			$scope.buf[i] = loadValues(arrayOfResults[i].data);
		}
		
		var datasets = [];
		datasets.push(datasetGenerator($scope.buf[0], 'Okex'		 , 'rgb(65, 65, 65)'  ));
		datasets.push(datasetGenerator($scope.buf[1], 'Bitstamp'	 , 'rgb(150, 65, 65)' ));
		datasets.push(datasetGenerator($scope.buf[2], 'Btcc'		 , 'rgb(65, 150, 65)' ));
		datasets.push(datasetGenerator($scope.buf[3], 'Coinmarketcap', 'rgb(65, 65, 150)' ));
		datasets.push(datasetGenerator($scope.buf[4], 'Yogit'		 , 'rgb(65, 150, 150)' ));

		var options = {
					tooltips : {
						enabled : false
					},
					hover : {
						mode : null
					},
					showAllTooltips : false,
					legend : {
						display : true
					},
					legend : {
						display : true
					},
					title : {
						text : chartTitle, // chart title
						display : false
					},
					scales : {
						xAxes : [ {
							type : "time",
							time : {
								unit : unit,
								unitStepSize : 1,
								round : unit,
							}
						} ],
						yAxes : [ {
							gridLines : {
								color : "black",
								borderDash : [ 2, 5 ],
					} } ] }};
		
		$scope.canvas = document.getElementById(elementId);
		$scope.ctx = $scope.canvas.getContext("2d");
		
		$scope.chart = new Chart($scope.ctx, {
			type : 'line',
			data : {  datasets : datasets },
			options : options
		});
	}, function(errResponse) {
		$scope.errorMessage = errResponse.data.errorMessage;
	});
}
	
function loadValues(data) {
	var arr = [];
	for (var i = 0; i < data.length; i++) {
		var val = data[i];
		var valDate = val["exchangetime"];
		var date = new Date(valDate);
		arr.push({
			x : ((date.getTime()) + 3600),
			y : val["exchangevalue"]
		});
	}
	return arr;
}

function datasetGenerator(data, label, color) {
	return {
		data : data,
		label : label, // 'buy' price data
		borderColor : color, // line color
		backgroundColor : 'rgba(0,0,0,0.1)', // fill color
		fill : false, // no fill
		lineTension : 0.3
	};
}