app.controller('bitcoinController', function($scope, $http, $location, $route,
		$log, $q) {
//	$scope.providers=[1,2,3,4,5];	
	$scope.providers=[];	
	$scope.weeklyDisplay=false;
	$scope.monthlyDisplay=false;
	$scope.yearlyDisplay=false;
	var cryptocurrencyId = 2 ;
	
	$http({
		method : 'GET',
		url : '/api/bitcoin/lastvalues/' + cryptocurrencyId
	}).then(function(response) {
		$scope.lastvalues = response.data;			
		
		console.log("$scope.lastvalues: " + $scope.lastvalues);
	});
	
		
		$http({
			method : 'GET',
			url : '/api/provider/'
		}).then(function(response) {
			$scope.providers = response.data;			
			
			console.log($scope.providers);
//			console.log($scope.providers[0]);
//			console.log($scope.providers[0].id);
			
			console.log("numero di providers: "+$scope.providers.length);
			
//			let promiseOne = $http.get('/api/bitcoin/lastDay/'+$scope.providers[0].id);	
			$scope.promises=[];
			for(var i = 0 ; i < $scope.providers.length ; i++){
				let promise = $http.get('/api/bitcoin/lastDay/'+$scope.providers[i].id);
				$scope.promises.push(promise);
			}
			console.log($scope.promises);
			// HANDLE MULTIPE HTTP REQUEST WITH ANGULARJS
			$q.all($scope.promises
//					[
//				promiseOne,
//				$http.get('/api/bitcoin/lastDay/'+$scope.providers[1].id),
//				 $http.get('/api/bitcoin/lastDay/'+$scope.providers[2].id),
//				 $http.get('/api/bitcoin/lastDay/'+$scope.providers[3].id),
//				 $http.get('/api/bitcoin/lastDay/'+$scope.providers[4].id)			
//				]
					).then(function(arrayOfResults) {
						
//						var btc1 = arrayOfResults[0].data;
//						var btc2 = arrayOfResults[1].data;
//						var btc3 = arrayOfResults[2].data;
//						var btc4 = arrayOfResults[3].data;
//						var btc5 = arrayOfResults[4].data;
//						console.log(arrayOfResults.length);
						var btcArray=[];
				for(var i = 0 ; i < arrayOfResults.length ; i++){
					var btc = arrayOfResults[i].data;
					btcArray.push(btc);
				}
				
				console.log(btcArray);
				$scope.chart = {};
				$scope.buf = {};
//				$scope.buf['dailyBufferBTC1'] = loadValues(btc1);
//				$scope.buf['dailyBufferBTC2'] = loadValues(btc2);
//				$scope.buf['dailyBufferBTC3'] = loadValues(btc3);
//				$scope.buf['dailyBufferBTC4'] = loadValues(btc4);
//				$scope.buf['dailyBufferBTC5'] = loadValues(btc5);
				$scope.buffers=[];
				for(var i = 0 ; i < btcArray.length ; i++){
//					var btc = arrayOfResults[i].data;
					$scope.buffers.push($scope.buf['dailyBufferBTC'+i] = loadValues(btcArray[i]));
				}
				console.log($scope.buffers);
				console.log($scope.providers[0].label);
				$scope.dsets=[];
				for(var i = 0 ; i < btcArray.length ; i++){
					console.log(Math.floor(Math.random()*100));
					var r=65;
					var g=65;
					var b=65;
					if(i==1){
						r=150;
					}
					if(i==2){
						g=150;
					}
					if(i==3){
						b=150;
					}
					if(i==4){
						g=150;
						b=150;
					}
					if(i>4){
						r=65+Math.floor(Math.random()*100);
						g=65+Math.floor(Math.random()*100);
						b=65+Math.floor(Math.random()*100);
					}
					
					var dset= {
							data : $scope.buffers[i],
							label : $scope.providers[i].label, // 'buy' price data
							borderColor : 'rgb('+r+', '+g+', '+b+')', // line color
							backgroundColor : 'rgba(0,0,0,0.1)', // fill color
							fill : false, // no fill
							lineTension : 0.3
						}
					console.log(dset);
					$scope.dsets.push(dset);
				}
				console.log($scope.dsets);
				$scope.canvas = document.getElementById("daily");
				$scope.ctx = $scope.canvas.getContext("2d");
				$scope.chart = new Chart($scope.ctx, {
					type : 'line',
					data : {
						datasets : $scope.dsets
//							[ {
//							data : $scope.buffers[0],
//							label : $scope.providers[0].label, // 'buy' price data
//							borderColor : 'rgb(65, 65, 65)', // line color
//							backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//							fill : false, // no fill
//							lineTension : 0.3
//						},
//						{
//							data : $scope.buf['dailyBufferBTC2'],
//							label : 'Bitstamp', // 'buy' price data
//							borderColor : 'rgb(150, 65, 65)', // line color
//							backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//							fill : false, // no fill
//							lineTension : 0.3
//						},
//						{
//							data : $scope.buf['dailyBufferBTC3'],
//							label : 'Btcc', // 'buy' price data
//							borderColor : 'rgb(65, 150, 65)', // line color
//							backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//							fill : false, // no fill
//							lineTension : 0.3
//						},
//						{
//							data : $scope.buf['dailyBufferBTC4'],
//							label : 'Coinmarketcap', // 'buy' price data
//							borderColor : 'rgb(65, 65, 150)', // line color
//							backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//							fill : false, // no fill
//							lineTension : 0.3
//						},
//						{
//							data : $scope.buf['dailyBufferBTC5'],
//							label : 'Yogit', // 'buy' price data
//							borderColor : 'rgb(65, 150, 150)', // line color
//							backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//							fill : false, // no fill
//							lineTension : 0.3
//						}]
					},
					options : {
						tooltips : {
							enabled : false
						},
						hover : {
							mode : null
						},
						showAllTooltips : false,
						legend : {
							display : true
						},
						legend : {
							display : true
						},
						title : {
							text : 'BTC/USD ( Bitcoin )', // chart title
							display : false
						},
						scales : {
							xAxes : [ {
								type : "time",
								time : {
									unit : 'minute',
									unitStepSize : 1,
									round : 'minute',
									tooltipFormat : "h:mm:ss a",
									displayFormats : {
										hour : 'MMM D, h:mm A'
									}
								}
							} ],
							yAxes : [ {
								gridLines : {
									color : "black",
									borderDash : [ 2, 5 ],
								}
							} ]
						}
					}
				});

			}, function(errResponse) {
				$scope.errorMessage = errResponse.data.errorMessage;
			});
		

		
			$scope.promisesWeek=[];
			for(var i = 0 ; i < $scope.providers.length ; i++){
				let promise = $http.get('/api/bitcoin/lastWeek/'+$scope.providers[i].id);
				$scope.promisesWeek.push(promise);
			}  
			
		$q.all($scope.promisesWeek).then(function(arrayOfResults) {
				 
			var btcArrayWeek=[];
			for(var i = 0 ; i < arrayOfResults.length ; i++){
				var btc = arrayOfResults[i].data;
				btcArrayWeek.push(btc);
			}

		$scope.chart = {};
		$scope.buf = {};
		$scope.buffers=[];
		for(var i = 0 ; i < btcArrayWeek.length ; i++){
			$scope.buffers.push($scope.buf['weeklyBufferBTC'+i] = loadValues(btcArrayWeek[i]));
		}
//		$scope.buf['weeklyBufferBTC1'] = loadValues(btc1);
//		$scope.buf['weeklyBufferBTC2'] = loadValues(btc2);
//		$scope.buf['weeklyBufferBTC3'] = loadValues(btc3);
//		$scope.buf['weeklyBufferBTC4'] = loadValues(btc4);
//		$scope.buf['weeklyBufferBTC5'] = loadValues(btc5);
		$scope.dsets=[];
		for(var i = 0 ; i < btcArrayWeek.length ; i++){
//			console.log(Math.floor(Math.random()*100));
			var r=65;
			var g=65;
			var b=65;
			if(i==1){
				r=150;
			}
			if(i==2){
				g=150;
			}
			if(i==3){
				b=150;
			}
			if(i==4){
				g=150;
				b=150;
			}
			if(i>4){
				r=65+Math.floor(Math.random()*100);
				g=65+Math.floor(Math.random()*100);
				b=65+Math.floor(Math.random()*100);
			}
			
			var dset= {
					data : $scope.buffers[i],
					label : $scope.providers[i].label, // 'buy' price data
					borderColor : 'rgb('+r+', '+g+', '+b+')', // line color
					backgroundColor : 'rgba(0,0,0,0.1)', // fill color
					fill : false, // no fill
					lineTension : 0.3
				}
//			console.log(dset);
			$scope.dsets.push(dset);
		}
		$scope.canvas = document.getElementById("weekly");
		$scope.ctx = $scope.canvas.getContext("2d");
		$scope.chart = new Chart($scope.ctx, {
			type : 'line',
			data : {
				datasets : $scope.dsets
//					[ {
//					data : $scope.buf['weeklyBufferBTC1'],
//					label : 'Okex', // 'buy' price data
//					borderColor : 'rgb(65, 65, 65)', // line color
//					backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//					fill : false, // no fill
//					lineTension : 0.3
//				},
//				{
//					data : $scope.buf['weeklyBufferBTC2'],
//					label : 'Bitstamp', // 'buy' price data
//					borderColor : 'rgb(150, 65, 65)', // line color
//					backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//					fill : false, // no fill
//					lineTension : 0.3
//				},
//				{
//					data : $scope.buf['weeklyBufferBTC3'],
//					label : 'Btcc', // 'buy' price data
//					borderColor : 'rgb(65, 150, 65)', // line color
//					backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//					fill : false, // no fill
//					lineTension : 0.3
//				},
//				{
//					data : $scope.buf['weeklyBufferBTC4'],
//					label : 'Coinmarketcap', // 'buy' price data
//					borderColor : 'rgb(65, 65, 150)', // line color
//					backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//					fill : false, // no fill
//					lineTension : 0.3
//				},
//				{
//					data : $scope.buf['weeklyBufferBTC5'],
//					label : 'Yogit', // 'buy' price data
//					borderColor : 'rgb(65, 150, 150)', // line color
//					backgroundColor : 'rgba(0,0,0,0.1)', // fill color
//					fill : false, // no fill
//					lineTension : 0.3
//				}]
			},
			options : {
				tooltips : {
					enabled : false
				},
				hover : {
					mode : null
				},
				showAllTooltips : false,
				legend : {
					display : true
				},
				legend : {
					display : true
				},
				title : {
					text : 'BTC/USD ( Bitcoin )', // chart title
					display : false
				},
				scales : {
					xAxes : [ {
						type : "time",
						time : {
							unit : 'day',
							unitStepSize : 1,
							round : 'day',
							tooltipFormat : "h:mm:ss a",
							displayFormats : {
								hour : 'MMM D, h:mm A'
							}
						}
					} ],
					yAxes : [ {
						gridLines : {
							color : "black",
							borderDash : [ 2, 5 ],
						}
					} ]
				}
			}
		});

	}, function(errResponse) {
		$scope.errorMessage = errResponse.data.errorMessage;
	});
		

		$scope.promisesMonth=[];
		for(var i = 0 ; i < $scope.providers.length ; i++){
			let promise = $http.get('/api/bitcoin/lastMonth/'+$scope.providers[i].id);
			$scope.promisesMonth.push(promise);
		}  
		
		$q.all($scope.promisesMonth).then(function(arrayOfResults) {
					 
			var btcArrayMonth=[];
			for(var i = 0 ; i < arrayOfResults.length ; i++){
				var btc = arrayOfResults[i].data;
				btcArrayMonth.push(btc);
			}			

			$scope.chart = {};
			$scope.buf = {};
			$scope.buffers=[];
			for(var i = 0 ; i < btcArrayMonth.length ; i++){
				$scope.buffers.push($scope.buf['monthlyBufferBTC'+i] = loadValues(btcArrayMonth[i]));
			}
			
			$scope.dsets=[];
			for(var i = 0 ; i < btcArrayMonth.length ; i++){
//				console.log(Math.floor(Math.random()*100));
				var r=65;
				var g=65;
				var b=65;
				if(i==1){
					r=150;
				}
				if(i==2){
					g=150;
				}
				if(i==3){
					b=150;
				}
				if(i==4){
					g=150;
					b=150;
				}
				if(i>4){
					r=65+Math.floor(Math.random()*100);
					g=65+Math.floor(Math.random()*100);
					b=65+Math.floor(Math.random()*100);
				}
				
				var dset= {
						data : $scope.buffers[i],
						label : $scope.providers[i].label, // 'buy' price data
						borderColor : 'rgb('+r+', '+g+', '+b+')', // line color
						backgroundColor : 'rgba(0,0,0,0.1)', // fill color
						fill : false, // no fill
						lineTension : 0.3
					}
//				console.log(dset);
				$scope.dsets.push(dset);
			}
			
			$scope.canvas = document.getElementById("monthly");
			$scope.ctx = $scope.canvas.getContext("2d");
			$scope.chart = new Chart($scope.ctx, {
				type : 'line',
				data : {
					datasets : $scope.dsets
				},
				options : {
					tooltips : {
						enabled : false
					},
					hover : {
						mode : null
					},
					showAllTooltips : false,
					legend : {
						display : true
					},
					legend : {
						display : true
					},
					title : {
						text : 'BTC/USD ( Bitcoin )', // chart title
						display : false
					},
					scales : {
						xAxes : [ {
							type : "time",
							time : {
								unit : 'day',
								unitStepSize : 1,
								round : 'day',
								tooltipFormat : "h:mm:ss a",
								displayFormats : {
									hour : 'MMM D, h:mm A'
								}
							}
						} ],
						yAxes : [ {
							gridLines : {
								color : "black",
								borderDash : [ 2, 5 ],
							}
						} ]
					}
				}
			});
		}, function(errResponse) {
			$scope.errorMessage = errResponse.data.errorMessage;
		});
		
		$scope.promisesYear=[];
		for(var i = 0 ; i < $scope.providers.length ; i++){
			let promise = $http.get('/api/bitcoin/lastYear/'+$scope.providers[i].id);
			$scope.promisesYear.push(promise);
		}  

		$q.all($scope.promisesYear).then(function(arrayOfResults) {
				
			var btcArrayYear=[];
			for(var i = 0 ; i < arrayOfResults.length ; i++){
				var btc = arrayOfResults[i].data;
				btcArrayYear.push(btc);
			}	

			$scope.chart = {};
			$scope.buf = {};
			$scope.buffers=[];
			for(var i = 0 ; i < btcArrayYear.length ; i++){
				$scope.buffers.push($scope.buf['yearlyBufferBTC'+i] = loadValues(btcArrayYear[i]));
			}

			$scope.dsets=[];
			for(var i = 0 ; i < btcArrayYear.length ; i++){
//				console.log(Math.floor(Math.random()*100));
				var r=65;
				var g=65;
				var b=65;
				if(i==1){
					r=150;
				}
				if(i==2){
					g=150;
				}
				if(i==3){
					b=150;
				}
				if(i==4){
					g=150;
					b=150;
				}
				if(i>4){
					r=65+Math.floor(Math.random()*100);
					g=65+Math.floor(Math.random()*100);
					b=65+Math.floor(Math.random()*100);
				}
				
				var dset= {
						data : $scope.buffers[i],
						label : $scope.providers[i].label, // 'buy' price data
						borderColor : 'rgb('+r+', '+g+', '+b+')', // line color
						backgroundColor : 'rgba(0,0,0,0.1)', // fill color
						fill : false, // no fill
						lineTension : 0.3
					}
//				console.log(dset);
				$scope.dsets.push(dset);
			}
			
			$scope.canvas = document.getElementById("yearly");
			$scope.ctx = $scope.canvas.getContext("2d");
			$scope.chart = new Chart($scope.ctx, {
				type : 'line',
				data : {				
						datasets : $scope.dsets
				},
				options : {
					tooltips : {
						enabled : false
					},
					hover : {
						mode : null
					},
					showAllTooltips : false,
					legend : {
						display : true
					},
					title : {
						text : 'BTC/USD ( Bitcoin )', // chart title
						display : false
					},
					scales : {
						xAxes : [ {
							type : "time",
							time : {
								unit : 'month',
								unitStepSize : 2
							}
						} ],
						yAxes : [ {
							gridLines : {
								color : "black",
								borderDash : [ 2, 5 ],
							}
						} ]
					}
				}
			});
		}, function(errResponse) {
			$scope.errorMessage = errResponse.data.errorMessage;
		});
	});
	});
	function loadValues(data) {
		var arr = [];
		for (var i = 0; i < data.length; i++) {
			var val = data[i];
			var valDate = val["exchangetime"];
			var date = new Date(valDate);
			arr.push({
				x : ((date.getTime()) + 3600),
				y : val["exchangevalue"]
			});
		}
		return arr;
	}